eq   (X, X).
cons (X)  :- eq (X, arr (Y, arr (list (Y), list (Y)))).
plus (X)  :- eq (X, arr (int, arr (int, int))).
nil  (X)  :- eq (X, list (Y)).

length (X) :- eq   (X, arr (Y, Z)),
              nil  (Y),
              eq   (Z, int),
              cons (W),
              eq   (W, arr (W1, arr (W2, Y))),
              plus (U),
              eq   (U, arr (int, arr (Z, Z))),
              eq   (W2, Y).

:- length (X).

% length (-!)
% plus   (-!)
% cons   (-!)
% nil    (-!)
% eq     (-!, -!)
